// Code generated by entc, DO NOT EDIT.

package ent

import (
	"gonebook/internal/ent/schema"
	"gonebook/internal/ent/token"
	"gonebook/internal/ent/user"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	tokenFields := schema.Token{}.Fields()
	_ = tokenFields
	// tokenDescValue is the schema descriptor for value field.
	tokenDescValue := tokenFields[0].Descriptor()
	// token.ValueValidator is a validator for the "value" field. It is called by the builders before save.
	token.ValueValidator = tokenDescValue.Validators[0].(func(string) error)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[0].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = userDescUsername.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[1].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
}
