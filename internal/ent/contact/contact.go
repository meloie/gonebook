// Code generated by entc, DO NOT EDIT.

package contact

const (
	// Label holds the string label denoting the contact type in the database.
	Label = "contact"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldPhone holds the string denoting the phone field in the database.
	FieldPhone = "phone"
	// FieldAddress holds the string denoting the address field in the database.
	FieldAddress = "address"

	// EdgeOwner holds the string denoting the owner edge name in mutations.
	EdgeOwner = "owner"

	// Table holds the table name of the contact in the database.
	Table = "contacts"
	// OwnerTable is the table the holds the owner relation/edge.
	OwnerTable = "contacts"
	// OwnerInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	OwnerInverseTable = "users"
	// OwnerColumn is the table column denoting the owner relation/edge.
	OwnerColumn = "contact_owner"
)

// Columns holds all SQL columns for contact fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldPhone,
	FieldAddress,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Contact type.
var ForeignKeys = []string{
	"contact_owner",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
